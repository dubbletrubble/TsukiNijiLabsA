/**
 * @fileoverview RevenuePanel component for displaying and managing NFT revenue information.
 * This component shows total revenue, payout history, and allows revenue claiming for NFT owners.
 */

import React from 'react';
import styled from '@emotion/styled';
import { formatEther } from 'viem';
import { Button, Text } from '../common/StyledComponents';
import { theme } from '../../styles/theme';
import { FaCoins, FaClock, FaCalendar } from 'react-icons/fa';

const Container = styled.div`
  background: rgba(255, 255, 255, 0.05);
  border-radius: ${theme.borderRadius.lg};
  padding: ${theme.spacing.lg};
  display: flex;
  flex-direction: column;
  gap: ${theme.spacing.lg};
`;

const Header = styled.div`
  display: flex;
  align-items: center;
  gap: ${theme.spacing.md};
  
  svg {
    color: ${theme.colors.accent.primary};
    font-size: 1.5rem;
  }
`;

const Title = styled.h3`
  margin: 0;
  font-size: 1.25rem;
  font-weight: 600;
`;

const StatsGrid = styled.div`
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: ${theme.spacing.md};
`;

const StatItem = styled.div`
  background: rgba(0, 0, 0, 0.2);
  padding: ${theme.spacing.md};
  border-radius: ${theme.borderRadius.md};
  
  h4 {
    font-size: 0.875rem;
    color: ${theme.colors.text.secondary};
    margin: 0 0 ${theme.spacing.xs};
    display: flex;
    align-items: center;
    gap: ${theme.spacing.xs};
    
    svg {
      font-size: 0.875rem;
    }
  }
  
  p {
    font-size: 1.125rem;
    margin: 0;
    color: ${theme.colors.text.primary};
  }
`;

const ClaimSection = styled.div`
  display: flex;
  flex-direction: column;
  gap: ${theme.spacing.md};
  padding-top: ${theme.spacing.md};
  border-top: 1px solid rgba(255, 255, 255, 0.1);
`;

const InfoText = styled(Text)`
  font-size: 0.875rem;
  opacity: 0.7;
`;

/**
 * RevenuePanel displays revenue information and claiming functionality for an NFT.
 * 
 * @param {Object} props - Component props
 * @param {BigInt} props.totalRevenue - Total revenue generated by the NFT
 * @param {BigInt} props.lastPayout - Timestamp of the last payout
 * @param {BigInt} props.nextPayout - Timestamp of the next scheduled payout
 * @param {BigInt} props.availableRevenue - Amount of revenue available to claim
 * @param {boolean} props.isOwner - Whether the current user owns the NFT
 * @param {Function} props.onClaim - Callback function for claiming revenue
 * @param {boolean} props.isLoading - Loading state for claim transaction
 * @returns {JSX.Element} The revenue panel component
 */
const RevenuePanel = ({
  totalRevenue,
  lastPayout,
  nextPayout,
  availableRevenue,
  isOwner,
  onClaim,
  isLoading
}) => {
  return (
    <Container>
      <Header>
        <FaCoins />
        <Title>Revenue Distribution</Title>
      </Header>
      
      <StatsGrid>
        <StatItem>
          <h4><FaCoins /> Total Revenue</h4>
          <p>{formatEther(totalRevenue || 0n)} $TSKJ</p>
        </StatItem>
        <StatItem>
          <h4><FaClock /> Last Payout</h4>
          <p>{lastPayout ? new Date(Number(lastPayout) * 1000).toLocaleDateString() : 'N/A'}</p>
        </StatItem>
        <StatItem>
          <h4><FaCalendar /> Next Payout</h4>
          <p>{nextPayout ? new Date(Number(nextPayout) * 1000).toLocaleDateString() : 'N/A'}</p>
        </StatItem>
        {isOwner && availableRevenue > 0n && (
          <StatItem>
            <h4><FaCoins /> Available to Claim</h4>
            <p>{formatEther(availableRevenue)} $TSKJ</p>
          </StatItem>
        )}
      </StatsGrid>
      
      {isOwner && (
        <ClaimSection>
          <InfoText>
            Revenue is distributed quarterly with a 2.5% platform fee.
            {availableRevenue > 0n ? ' You have revenue available to claim.' : ' No revenue available to claim at this time.'}
          </InfoText>
          
          {availableRevenue > 0n && (
            <Button 
              onClick={onClaim}
              disabled={isLoading || availableRevenue === 0n}
              loading={isLoading}
            >
              Claim Revenue
            </Button>
          )}
        </ClaimSection>
      )}
    </Container>
  );
};

export default RevenuePanel;
